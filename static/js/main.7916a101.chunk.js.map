{"version":3,"sources":["types/countries.ts","store/action-creators/countries.ts","types/country.ts","store/action-creators/country.ts","store/action-creators/index.ts","hooks/action.hook.ts","hooks/typedSelector.hook.ts","pages/MainPage.tsx","pages/CountryPage.tsx","theme/CustomThemeProvider.tsx","store/redusers/countryReduser.ts","store/redusers/countriesReduser.ts","store/redusers/index.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CountriesActionTypes","CountryActionTypes","fetchAllCountries","dispatch","a","type","FETCH_COUNTRIES","axios","get","response","FETCH_COUNTRIES_SUCCESS","payload","data","FETCH_COUNTRIES_ERORR","fetchCountry","id","FETCH_COUNTRY","FETCH_COUNTRY_SUCCESS","FETCH_COUNTRY_ERORR","ActionCreators","CountriesActionCreators","CountryActionCreators","useAction","useDispatch","bindActionCreators","useTypedSelector","useSelector","MainPage","props","state","countries","loading","error","useEffect","map","country","to","capital","CountryPage","useParams","description","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","success","background","paper","default","text","disabled","hint","CustomThemeProvider","ThemeProvider","children","inititalState","name","capitalLocation","coordinates","imageUrl","videoUrl","currency","ISOCode","places","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAmCYA,E,mIAAAA,K,kCAAAA,E,kDAAAA,E,+CAAAA,M,KC9BL,ICmCKC,EDnCCC,EAAoB,WAC/B,8CAAO,WAAOC,GAAP,eAAAC,EAAA,sEAEHD,EAAS,CAAEE,KAAML,EAAqBM,kBAFnC,SAGoBC,IAAMC,IAAI,kDAH9B,OAGGC,EAHH,OAIHN,EAAS,CAAEE,KAAML,EAAqBU,wBAAyBC,QAASF,EAASG,OAJ9E,gDAMHT,EAAS,CAAEE,KAAML,EAAqBa,sBAAuBF,QAAS,iBANnE,yDAAP,wD,SCkCUV,K,8BAAAA,E,8CAAAA,E,2CAAAA,M,KCpCL,IAAMa,EAAe,SAACC,GAC3B,8CAAO,WAAOZ,GAAP,eAAAC,EAAA,sEAEHD,EAAS,CAAEE,KAAMJ,EAAmBe,gBAFjC,SAGoBT,IAAMC,IAAN,yDAA4DO,IAHhF,OAGGN,EAHH,OAIHN,EAAS,CAAEE,KAAMJ,EAAmBgB,sBAAuBN,QAASF,EAASG,OAJ1E,gDAMHT,EAAS,CAAEE,KAAMJ,EAAmBiB,oBAAqBP,QAAS,iBAN/D,yDAAP,uDCFWQ,EAAc,2BACtBC,GACAC,GCAQC,EAAY,WACvB,IAAMnB,EAAWoB,cAEjB,OAAOC,YAAmBL,EAAgBhB,ICJ/BsB,EAAqDC,I,OCkCnDC,EA9B2C,SAACC,GAAW,IAAD,EAC7BH,GAAiB,SAACI,GAAD,OAAWA,EAAMC,aAAhEA,EAD2D,EAC3DA,UAAWC,EADgD,EAChDA,QAASC,EADuC,EACvCA,MACpB9B,EAAsBoB,IAAtBpB,kBAOR,OALA+B,qBAAU,WACR/B,MAEC,IAEC6B,EACK,4CAGLC,EACK,2CAAcA,KAIrB,mCACGF,EAAUI,KAAI,SAACC,GACd,OACE,8BACE,cAAC,IAAD,CAAMC,GAAE,mBAAcD,EAAQpB,IAA9B,SAAsCoB,EAAQE,WADtCF,EAAQpB,UCSbuB,EA5BiD,SAACV,GAAW,IAAD,EACrCH,GAAiB,SAACI,GAAD,OAAWA,EAAMM,WAA9DA,EADiE,EACjEA,QAASJ,EADwD,EACxDA,QAASC,EAD+C,EAC/CA,MAClBjB,EAAOwB,cAAPxB,GACAD,EAAiBQ,IAAjBR,aAOR,OALAmB,qBAAU,WACRnB,EAAaC,KAEZ,CAACA,IAEAgB,EACK,4CAGLC,EACK,2CAAcA,KAIrB,qCACE,8BACGG,EAAQK,cAEX,cAAC,IAAD,CAAMJ,GAAI,IAAV,sB,gBC1BAK,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBhB,MAAO,CACLc,KAAM,UACND,MAAO,UACPE,KAAM,UACNC,aAAc,WAEhBE,QAAS,CACPJ,KAAM,UACND,MAAO,UACPE,KAAM,UACNC,aAAc,WAEhBG,WAAY,CACVC,MAAO,UACPC,QAAS,WAEXC,KAAM,CACJV,QAAS,UACTK,UAAW,UACXM,SAAU,UACVC,KAAM,WAKCC,EAA+C,SAAC7B,GAC3D,OACE,cAAC8B,EAAA,EAAD,CAAejB,MAAOA,EAAtB,SACGb,EAAM+B,Y,QC/CPC,EAA+B,CACnCzB,QAAS,CACPpB,GAAI,GACJsB,QAAS,GACTG,YAAa,GACbqB,KAAM,GACNC,gBAAiB,CACfC,YAAa,GACb1D,KAAM,IAER2D,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,OAAQ,IAEVrC,SAAS,EACTC,MAAO,MCjBH4B,EAAiC,CACrC9B,UAAW,GACXC,SAAS,EACTC,MAAO,MCAIqC,EAAcC,YAAgB,CACzCxC,UDE8B,WAAuE,IAAtED,EAAqE,uDAA7D+B,EAAeW,EAA8C,uCACpG,OAAQA,EAAOlE,MACb,KAAKL,EAAqBM,gBACxB,MAAO,CAAEyB,SAAS,EAAMC,MAAO,KAAMF,UAAW,IAElD,KAAK9B,EAAqBU,wBACxB,MAAO,CAAEqB,SAAS,EAAOC,MAAO,KAAMF,UAAWyC,EAAO5D,SAE1D,KAAKX,EAAqBa,sBACxB,MAAO,CAAEkB,SAAS,EAAOC,MAAOuC,EAAO5D,QAASmB,UAAW,IAE7D,QACC,OAAOD,ICbVM,QFe4B,WAAmE,IAAlEN,EAAiE,uDAAzD+B,EAAeW,EAA0C,uCAC9F,OAAQA,EAAOlE,MACb,KAAKJ,EAAmBe,cACtB,OAAO,2BAAKa,GAAZ,IAAmBE,SAAS,IAE9B,KAAK9B,EAAmBgB,sBACtB,OAAO,2BAAKY,GAAZ,IAAmBE,SAAS,EAAOI,QAASoC,EAAO5D,UAErD,KAAKV,EAAmBiB,oBACtB,OAAO,2BAAKW,GAAZ,IAAmBE,SAAS,EAAOC,MAAOuC,EAAO5D,UAEnD,QACC,OAAOkB,MG9BC2C,EAAQC,YAAYJ,EAAaK,YAAgBC,MCiC/CC,MAxBf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOK,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,KAAK,eAAeC,OAAK,EAAhC,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAU1C,GAAG,gBCdZ2C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7916a101.chunk.js","sourcesContent":["export interface ICountriesState {\n  countries: ICountriesData[];\n  loading: boolean;\n  error: null | string;\n}\n\ninterface IFetchCountriesAction {\n  type: CountriesActionTypes.FETCH_COUNTRIES;\n}\n\ninterface IFetchCountriesSuccesAction {\n  type: CountriesActionTypes.FETCH_COUNTRIES_SUCCESS;\n  payload: ICountriesData[];\n}\n\ninterface IFetchCountriesErrorAction {\n  type: CountriesActionTypes.FETCH_COUNTRIES_ERORR;\n  payload: string;\n}\n\nexport interface ICountriesData {\n  id: string;\n  imageUrl: string;\n  videoUrl: string;\n  currency: string;\n  ISOCode: string;\n  capitalLocation: {\n    type: string,\n    coordinates: number[],\n  };\n  name: string;\n  capital: string;\n  description: string;\n}\n\nexport enum CountriesActionTypes {\n  FETCH_COUNTRIES = 'FETCH_COUNTRIES',\n  FETCH_COUNTRIES_SUCCESS = 'FETCH_COUNTRIES_SUCCESS',\n  FETCH_COUNTRIES_ERORR = 'FETCH_COUNTRIES_ERORR'\n}\n\nexport type ICountriesAction = IFetchCountriesAction | IFetchCountriesSuccesAction | IFetchCountriesErrorAction\n","import axios from \"axios\";\nimport { Dispatch } from \"react\";\nimport { ICountriesAction, CountriesActionTypes } from \"../../types/countries\";\n\n\nexport const fetchAllCountries = () => {\n  return async (dispatch: Dispatch<ICountriesAction>) => {\n    try {\n      dispatch({ type: CountriesActionTypes.FETCH_COUNTRIES,  });\n      const response = await axios.get('https://travel-app-rss.herokuapp.com/countries');\n      dispatch({ type: CountriesActionTypes.FETCH_COUNTRIES_SUCCESS, payload: response.data });\n    } catch (e) {\n      dispatch({ type: CountriesActionTypes.FETCH_COUNTRIES_ERORR, payload: 'Got an error' });\n    }\n  };\n};","export interface ICountryState {\n  country: ICountryData;\n  loading: boolean;\n  error: null | string;\n}\ninterface IFetchCountryAction {\n  type: CountryActionTypes.FETCH_COUNTRY;\n}\n\ninterface IFetchCountrySuccesAction {\n  type: CountryActionTypes.FETCH_COUNTRY_SUCCESS;\n  payload: ICountryData;\n}\n\ninterface IFetchCountryErrorAction {\n  type: CountryActionTypes.FETCH_COUNTRY_ERORR;\n  payload: string;\n}\n\ninterface IPlace {\n  description: string;\n  name: string;\n  photoUrl: string;\n}\nexport interface ICountryData {\n  id: string;\n  imageUrl: string;\n  videoUrl: string;\n  currency: string;\n  ISOCode: string;\n  capitalLocation: {\n    type: string,\n    coordinates: number[],\n  };\n  name: string;\n  capital: string;\n  description: string;\n  places: IPlace[];\n}\n\nexport enum CountryActionTypes {\n  FETCH_COUNTRY = 'FETCH_COUNTRY',\n  FETCH_COUNTRY_SUCCESS = 'FETCH_COUNTRY_SUCCESS',\n  FETCH_COUNTRY_ERORR = 'FETCH_COUNTRY_ERORR'\n}\n\nexport type ICountryAction = IFetchCountryAction | IFetchCountrySuccesAction | IFetchCountryErrorAction\n","import axios from \"axios\";\nimport { Dispatch } from \"react\";\nimport { ICountryAction, CountryActionTypes } from \"../../types/country\";\n\nexport const fetchCountry = (id: string) => {\n  return async (dispatch: Dispatch<ICountryAction>) => {\n    try {\n      dispatch({ type: CountryActionTypes.FETCH_COUNTRY,  });\n      const response = await axios.get(`https://travel-app-rss.herokuapp.com/countries/${id}`);\n      dispatch({ type: CountryActionTypes.FETCH_COUNTRY_SUCCESS, payload: response.data });\n    } catch (e) {\n      dispatch({ type: CountryActionTypes.FETCH_COUNTRY_ERORR, payload: 'Got an error' });\n    }\n  };\n};","import * as CountriesActionCreators from './countries';\nimport * as CountryActionCreators from './country';\n\nexport const ActionCreators = {\n  ...CountriesActionCreators,\n  ...CountryActionCreators\n}","import { useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\";\nimport { ActionCreators } from '../store/action-creators/index';\n\n\nexport const useAction = () => {\n  const dispatch = useDispatch();\n\n  return bindActionCreators(ActionCreators, dispatch);\n}","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { IRootState } from \"../store/redusers\";\n\n\nexport const useTypedSelector: TypedUseSelectorHook<IRootState> = useSelector;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAction } from '../hooks/action.hook';\nimport { useTypedSelector } from '../hooks/typedSelector.hook';\n\ninterface IMainPageProps {\n}\n\nconst MainPage: React.FunctionComponent<IMainPageProps> = (props) => {\n  const { countries, loading, error } = useTypedSelector((state) => state.countries);\n  const { fetchAllCountries } = useAction();\n  \n  useEffect(() => {\n    fetchAllCountries();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    return <h1>Loading...</h1>\n  }\n\n  if (error) {\n    return <h1>Error is {error}</h1>\n  }\n\n  return (\n    <>\n      {countries.map((country) => {\n        return (\n          <div key={country.id}>\n            <Link to={`/country/${country.id}`} >{country.capital}</Link>\n          </div>\n        )\n      })}\n    </>\n  );\n};\n\nexport default MainPage;\n","import React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useAction } from '../hooks/action.hook';\nimport { useTypedSelector } from '../hooks/typedSelector.hook';\ninterface ICountryPageProps {\n}\ninterface ParamTypes {\n  id: string\n}\n\nconst CountryPage: React.FunctionComponent<ICountryPageProps> = (props) => {\n  const { country, loading, error } = useTypedSelector((state) => state.country);\n  const { id } = useParams<ParamTypes>();\n  const { fetchCountry } = useAction();\n\n  useEffect(() => {\n    fetchCountry(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  if (loading) {\n    return <h1>Loading...</h1>\n  }\n\n  if (error) {\n    return <h1>Error is {error}</h1>\n  }\n\n  return (\n    <>\n      <div>\n        {country.description}\n      </div>\n      <Link to={'/'}>Back</Link>\n    </>\n  );\n};\n\nexport default CountryPage;\n","import React from 'react';\nimport {\n  unstable_createMuiStrictModeTheme as createMuiTheme, \n  ThemeProvider\n} from '@material-ui/core/styles';\n\n// Можно дописывать по схеме с https://material-ui.com/customization/default-theme/#default-theme\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#7986cb',\n      main: '#3f51b5',\n      dark: '#303f9f',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#7986cb',\n      main: '#3f51b5',\n      dark: '#303f9f',\n      contrastText: '#fff',\n    },\n    error: {\n      main: '#f44336',\n      light: '#ff7961',\n      dark: '#ba000d',\n      contrastText: '#000000',\n    },\n    success: {\n      main: '#76ff03',\n      light: '#b0ff57',\n      dark: '#32cb00',\n      contrastText: '#000000',\n    },\n    background: {\n      paper: '#fafafa',\n      default: '#eceff1',\n    },\n    text: {\n      primary: '#7986cb',\n      secondary: '#3f51b5',\n      disabled: '#303f9f',\n      hint: '#fff',\n    },\n  }\n});\n\nexport const CustomThemeProvider: React.FunctionComponent = (props) => {\n  return (\n    <ThemeProvider theme={theme}>\n      {props.children}\n    </ThemeProvider>\n  );\n}","import { CountryActionTypes, ICountryAction, ICountryState } from \"../../types/country\";\n\nconst inititalState: ICountryState = {\n  country: {\n    id: '',\n    capital: '',\n    description: '',\n    name: '',\n    capitalLocation: {\n      coordinates: [],\n      type: ''\n    },\n    imageUrl: '',\n    videoUrl: '',\n    currency: '',\n    ISOCode: '',\n    places: []\n  },\n  loading: false,\n  error: null,\n}\n\nexport const countryReduser = (state = inititalState, action: ICountryAction): ICountryState => {\n  switch (action.type) {\n    case CountryActionTypes.FETCH_COUNTRY:\n      return { ...state, loading: true }\n\n    case CountryActionTypes.FETCH_COUNTRY_SUCCESS:\n      return { ...state, loading: false, country: action.payload }\n\n    case CountryActionTypes.FETCH_COUNTRY_ERORR:\n      return { ...state, loading: false, error: action.payload }\n  \n    default:\n     return state;\n  }\n};\n","import { CountriesActionTypes, ICountriesAction, ICountriesState } from \"../../types/countries\";\n\nconst inititalState: ICountriesState = {\n  countries: [],\n  loading: false,\n  error: null,\n}\n\nexport const countriesReduser = (state = inititalState, action: ICountriesAction): ICountriesState => {\n  switch (action.type) {\n    case CountriesActionTypes.FETCH_COUNTRIES:\n      return { loading: true, error: null, countries: [] }\n\n    case CountriesActionTypes.FETCH_COUNTRIES_SUCCESS:\n      return { loading: false, error: null, countries: action.payload }\n\n    case CountriesActionTypes.FETCH_COUNTRIES_ERORR:\n      return { loading: false, error: action.payload, countries: [] }\n  \n    default:\n     return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { countryReduser } from './countryReduser';\nimport { countriesReduser } from \"./countriesReduser\";\n\n\nexport const rootReducer = combineReducers({\n  countries: countriesReduser,\n  country: countryReduser\n});\n\nexport type IRootState = ReturnType<typeof rootReducer>;","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './redusers';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport MainPage from './pages/MainPage';\nimport CountryPage from './pages/CountryPage';\nimport { CustomThemeProvider } from './theme/CustomThemeProvider';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <CustomThemeProvider>\n        <Provider store={store}>\n            <Switch>\n\n              <Route path=\"/\" exact >\n                <MainPage />\n              </Route>\n\n              <Route path=\"/country/:id\" exact >\n                <CountryPage />\n              </Route>\n\n              <Redirect to=\"/\" />\n\n            </Switch>\n        </Provider>\n      </CustomThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}